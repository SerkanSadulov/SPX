@using WEB.ViewModels
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelper
@model HomeViewModel
@{
    ViewData["Title"] = "Highest Rated";
    var profileUrl = Url.Action("Profile", "Home");
    var uploadUrl = Url.Action("UploadProfilePicture", "Users");
    var loginUrl = Url.Action("LogIn", "Home");
}

<link rel="stylesheet" href="~/css/Deals.css">

<div class="toast-container" id="toast-container"></div>

<div class="container">
    <h1 class="text-center mb-5 mt-1">Най-високо оценени обяви!</h1>

    <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-4" id="services-container">
    </div>
</div>


    <script>
    document.addEventListener("DOMContentLoaded", function () {
        fetchServicesByRating(); 
    });

    async function fetchServicesByRating() {
        let servicesURL = "@Model.ServicesEndpoint";
        const allServices = [];  

        try {
            const response = await fetch(`${servicesURL}RatingsEntity/HighestRated`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (!response.ok) {
                throw new Error("Failed to fetch services");
            }

            const data = await response.json();

            for (const rating of data) {
                const service = await fetchServiceByID(rating.serviceID);
                allServices.push(service);  
            }

            displayServices(allServices);

        } catch (error) {
            console.error("Error fetching services", error);
        }
    }

    async function fetchServiceByID(serviceID) {
        const serviceDetailsURL = "@Model.ServicesEndpoint";  
        try {
            const response = await fetch(`${serviceDetailsURL}Services/${serviceID}`, {
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                },
            });

            if (!response.ok) {
                throw new Error(`Failed to fetch service with ID ${serviceID}`);
            }

            const serviceData = await response.json();
            return serviceData;  
        } catch (error) {
            console.error(`Error fetching service ${serviceID}`, error);
            return null;  
        }
    }

    function displayServices(data) {
        const container = document.getElementById("services-container");
        container.innerHTML = "";

        if (data.length === 0) {
            container.innerHTML = `
                <div class="col-12 text-center mt-5">
                    <h3 class="text-muted">There are no listings</h3>
                </div>`;
        } else {
            data.forEach((service) => {
                if (service) { 
                    container.innerHTML += `
                        <div class="col text-white">
                            <div class="service-card shadow-lg rounded p-3 text-center bg-dark d-flex flex-column" style="cursor: pointer; height: 100%;">
                                <img src="${service.images && service.images.split(",")[0].trim() !== "" ? "/serviceImages/" + service.images.split(",")[0].trim() : "https://picsum.photos/250"}" alt="${service.serviceName}" class="img-fluid mb-3" style="max-width: 100%; cursor: pointer" onclick="redirectToServicePage('${service.serviceID}')" />
                                <div class="service-name mb-2 flex-grow-1">
                                    <h5>${service.serviceName}</h5>
                                    <span>Награда за качество! <i class="fas fa-star" style="color:gold"></i></span>
                                </div>
                                <div class="service-price text-white">
                                    <p><strong>Цена: </strong>$${service.price}</p>
                                </div>
                                <div class="form-check form-switch text-white d-flex justify-content-center">
                                    <input class="form-check-input" type="checkbox" id="compareCheckbox_${service.serviceID}" value="${service.serviceID}" onchange="handleCompareCheckbox('${service.serviceID}', '${service.serviceName}', '${service.description}', ${service.price})">
                                </div>
                            </div>
                        </div>`;
                }
            });
        }
    }

    function redirectToServicePage(serviceID) {
        const url = '@Url.Action("Service", "Services")' + "?serviceID=" + encodeURIComponent(serviceID);
        window.location.href = url;
    }

    </script>

