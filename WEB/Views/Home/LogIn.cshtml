@using WEB.ViewModels
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelper
@model HomeViewModel
@{
    ViewData["Title"] = "Log in";
}
<link rel="stylesheet" href="~/css/LogIn.css">

<div class="login-page">
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div id="errorToast" class="toast align-items-center text-bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    User not found!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <section class="vh-100">
        <div class="container py-5 h-100">
            <div class="row d-flex justify-content-center align-items-center h-100">
                <div class="col col-xl-10">
                    <div class="card" style="border-radius: 1rem;">
                        <div class="row g-0">
                            <div class="col-md-6 col-lg-5 d-none d-md-block">
                                <img src="~/img/RegisterImage.png"
                                     alt="login form" class="img-fluid"
                                     style="border-radius: 1rem 0 0 1rem; width: 100%; height: 100%; object-fit: cover;" />
                            </div>
                            <div class="col-md-6 col-lg-7 d-flex align-items-center">
                                <div class="card-body p-4 p-lg-5">
                                    <form>
                                        <div class="d-flex align-items-center mb-3 pb-1">
                                            <img src="~/img/SPXLogo.png" alt="Logo" style="width: 50px; height: 50px; border-radius: 50%; margin-right: 10px;" />
                                            <span class="h1 fw-bold mb-0">Service & Product eXchange</span>
                                        </div>

                                        <h5 class="fw-normal mb-3 pb-3" style="letter-spacing: 1px;">Вписване в профилът Ви</h5>

                                        <div data-mdb-input-init class="form-outline mb-4">
                                            <input type="text" name="username" id="form2Example17" class="form-control form-control-lg" asp-for="Username" placeholder="Потребителско име" />
                                        </div>

                                        <div data-mdb-input-init class="form-outline mb-4">
                                            <input type="password" name="password" id="form2Example27" class="form-control form-control-lg" asp-for="Password" placeholder="Парола" />
                                        </div>

                                        <div class="pt-1 mb-4">
                                            <button data-mdb-button-init data-mdb-ripple-init class="btn btn-secondary btn-lg btn-block" type="submit" name="logIn">Вписване</button>
                                        </div>

                                        <p class="mb-5 pb-lg-2" >
                                            Нямате профил?
                                            <a href="/Home/Register" class="text-decoration-none text-success">Регистрирайте се тук!</a>
                                        </p>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


</div>

    <script>
        $(document).ready(function () {

            function showToast(message, type) {
                const toastHTML = `
                    <div class="toast ${type}" role="alert" aria-live="assertive" aria-atomic="true" data-delay="3000">
                        <div class="toast-body">
                            ${message}
                        </div>
                    </div>
                `;
                $("#toast-container").append(toastHTML);
                $(".toast").toast('show');
            }

            if (getCookie("LoggedInData").length != 0) {
                let url = '@Url.Action("Profile", "Home")';
                window.location.href = url;
            }

            let servicesURL = "@Model.ServicesEndpoint";

            $("div.login-page").on("click", "button[name='logIn']", async function (e) {
                e.preventDefault();

                $("input").removeClass("border-danger");

                let username = $("input[name='username']").val().trim();
                let password = $("input[name='password']").val().trim();
                let hasErrors = false;

                if (username === "") {
                    $("input[name='username']").addClass("border-danger");
                    showToast("Моля въведете потрбителско име", "bg-danger");
                    hasErrors = true;
                }

                if (password === "") {
                    $("input[name='password']").addClass("border-danger");
                    showToast("Моля въведете парола", "bg-danger");
                    hasErrors = true;
                }

                if (hasErrors) {
                    return;
                }

                const user = {
                    Username: username,
                    Password: password,
                };

                try {
                    const response = await fetch(servicesURL + "Users/LogIn", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify(user),
                    });

                    if (!response.ok) {
                    showToast("errorToast", "User not found!");
                        throw new Error("User not found!");
                    }

                    const data = await response.json();
                    const token = data.token;

                    const decodedToken = jwt_decode(token);

                    const userData = {
                        userId: decodedToken.sub,
                        username: decodedToken.Username,
                        email: decodedToken.email,
                        userType: decodedToken.UserType,
                        profilePicture: decodedToken.ProfilePicture,
                        phoneNumber: decodedToken.PhoneNumber,
                    };

                    setCookie("JWTToken", token, 1); 
                    setCookie("LoggedInData", JSON.stringify(userData), 1); 

                    let url = '@Url.Action("Profile", "Home")';
                    window.location.href = url;

                } catch (error) {
                    console.error("Error logging in user", error);
                }
            });
        });
    </script>
</div>
